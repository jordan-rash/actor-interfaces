namespace "wasmcloud:blobstore"

interface {        
    CreateContainer(id: string): Container
    RemoveContainer(id: string): BlobstoreResult
    RemoveObject(id: string, container_id: string): BlobstoreResult
    ListObjects(container_id: string): BlobList
    UploadChunk{chunk: FileChunk}: void
    StartDownload(blob_id: string, container_id: string, chunk_size: u64, context: string?): BlobstoreResult
    StartUpload{blob: FileChunk}: BlobstoreResult    
    GetObjectInfo(blob_id: string, container_id: string): Blob

    ReceiveChunk{chunk: FileChunk}: void
}

type BlobstoreResult {
    success: bool
    error: string?
}

type FileChunk {
    sequenceNo: u64,
    container: Container,
    id: string,
    totalBytes: u64
    chunkSize: u64,
    context: string?,
    chunkBytes: bytes
}

type Container {
    id: string
}

type ContainerList {
    containers: [Container]
}

type Blob {
    id: string
    container: Container
    byteSize: u64
}

type BlobList {
    blobs: [Blob]
}

type StreamRequest {
    id: string
    container: Container
    chunkSize: u64
    context: string?
}

type Transfer {
    blobId: string
    container: Container
    chunkSize: u64
    totalSize: u64
    totalChunks: u64
    context: string?
}